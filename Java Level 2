import java.util.Scanner;
class Main {
    public static void main(String[] args) {
        int mark1, mark2, mark3;
        Scanner sc = new Scanner(System.in);
        mark1 = sc.nextInt();
        mark2 = sc.nextInt();
        mark3 = sc.nextInt();
        double total = mark1 + mark2 + mark3;
        double average = total / 3;
        System.out.println("Total : " + (int) total);
        System.out.printf("Average : %.2f\n", average);
    }
}
----------------------------------------------------------------
import java.io.*;
import java.util.*;
class copartnerstrain {
	public static void main(String [] args) {
	    int a,count;
	    Scanner sc = new Scanner(System.in);
	    a = sc.nextInt();
	    count=a%8;
	    switch(count)
	    {
	        case 0:
	            System.out.println((a-1)+"SL");
	            break;
	        case 1:
	            System.out.println((a+3)+"LB");
	            break;
	        case 2:
	            System.out.println((a+3)+"MB");
	            break;
	        case 3:
	            System.out.println((a+3)+"UB");
	            break;
	        case 4:
	            System.out.println((a-3)+"LB");
	            break;
	        case 5:
	            System.out.println((a-3)+"MB");
	            break;
	        case 6:
	            System.out.println((a-3)+"UB");
	            break;
	        case 7:
	            System.out.println((a+1)+"SU");
	            break;
	    }

	}
}
-----------------------------------------------------
import java.util.*;

class Main{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int adult = sc.nextInt();
        int child = sc.nextInt();
        int legs = sc.nextInt();
        if((adult+child)*2==legs)
        System.out.println("yes");
        else System.out.println("no");
    }
}
---------------------------------------------------------

import java.util.*;

class Main{
    public static int leap(int n)
    {
        if(n==0) return 0;
        if(n%400==0) return 366;
        if(n%100==0) return 365;
        if(n%4==0) return 366;
        return 365;
    }
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int days = 0;
        for(int i=1;i<n;i++)
        {
            
            days+=leap(i);
        }
        days++;
        days%=7;
        String ar[] = new String[7];
        ar[0] = "Sunday";
        ar[1] = "Monday";
        ar[2] = "Tuesday";
        ar[3] = "Wednesday";
        ar[4] = "Thursday";
        ar[5] = "Friday";
        ar[6] = "Saturday";
        System.out.println(ar[days]);
    }
}

------------------------------------------------------------------
// You are using Java
import java.util.*;
class Main
{
 public static void main(String args[]){    
  int i,flag=0;      
  int n;    
  Scanner in = new Scanner(System.in);
  n=in.nextInt();
  if(n==0||n==1)
  {  
   System.out.println(n+" is not prime number");      
  }else
  {  
   for(i=2;i<=Math.sqrt(n);i++)
   {      
    if(n%i==0)
    {      
     System.out.println(n+" is not prime number");      
     flag=1;      
     break;      
    }      
   }      
   if(flag==0)  
   { 
       System.out.println(n+" is prime number"); 
       
   }  
  }
}    
}   

===----------------------------------------------

class FibonacciSeries {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        
        while (T-- > 0) {
            int N = sc.nextInt();
            int a = 0, b = 1;
            
            for (int i = 0; i < N; i++) {
                System.out.print(a + " ");
                int temp = a + b;
                a = b;
                b = temp;
            }
            System.out.println();
        }
        sc.close();
    }
}
---------------------------------------------------------
// You are using Java
import java.util.*;
class ReduceRecipe {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] ingredients = new int[N];

        for (int i = 0; i < N; i++) {
            ingredients[i] = sc.nextInt();
        }

        int gcd = ingredients[0];
        for (int i = 1; i < N; i++) {
            gcd = findGCD(gcd, ingredients[i]);
        }

        for (int i = 0; i < N; i++) {
            System.out.print(ingredients[i] / gcd + " ");
        }
        System.out.println();
        sc.close();
    }

    static int findGCD(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
}

---------------------------------------------------------------------------------------
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] array = new int[n];

        for (int i = 0; i < n; i++) {
            array[i] = in.nextInt();
        }

        int sum = 0;
        int product = 1;
        for (int i = 0; i < n; i++) {
            sum += array[i];
            product *= array[i];
        }
  
        if (sum % 2 == 0) {
            System.out.println("Sum of the elements is even: " + sum);
        } else {
            System.out.println("Product of the elements is odd: " + product);
        }
    }
}
----------------------------------------------------------------------
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        int lastElement = arr[n - 1];

        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }

      
        arr[0] = lastElement;

     
        System.out.print("Rotated Array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }

        scanner.close();
    }
}

--------------------
ROPE PROBLEM
--------------------
// You are using Java
import java.util.Scanner;
class Main{
    public static void main(String[] args){
        Scanner  sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] arr = new int[n];
        int sum=0;
        for(int i =0;i<n;i++){
            arr[i]=sc.nextInt();
            sum+=arr[i];
        }
        int result = sum-((2*k)*(n-1));
        System.out.println(result);
        
    }

import java.util.*;
class SecondLargest {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        int largest = Integer.MIN_VALUE, secondLargest = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            if (arr[i] > largest) {
                secondLargest = largest;
                largest = arr[i];
            } else if (arr[i] > secondLargest && arr[i] != largest) {
                secondLargest = arr[i];
            }
        }
        
        System.out.println(secondLargest);
        sc.close();
    }
}
OR
import java.util.*;

class SecondLargest {
    public static void main(String[] args) {
        int i, n;
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        int arr[] = new int[n];
        for (i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        
        Arrays.sort(arr);
        System.out.println(arr[n - 2]);
    }
}

--------------------------------------------------------
import java.util.*;

class MissingNumber {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        
        int XOR_1_N = 0, XOR_array = 0;
        
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
            XOR_array ^= arr[i];  // XOR of given numbers
        }
        
        for (int i = 1; i <= n + 1; i++) {
            XOR_1_N ^= i;  // XOR of numbers from 1 to N+1
        }
        
        System.out.println(XOR_1_N ^ XOR_array);  // Missing number
        sc.close();
    }
}
------------------------------------------------------------------------------
4 3
1 1 1
1 0 1
1 1 1
1 0 0
output:
10
Movie 	Day 1	Day 2	Day 3
Movie 1	1	1	1
Movie 2	1	0	1
Movie 3	1	1	1
Movie 4	1	0	0

import java.util.*;

class MovieCollisions {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt(); 
        int M = sc.nextInt();
        int[][] schedule = new int[N][M];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                schedule[i][j] = sc.nextInt();
            }
        }

        int res= 0;

        for (int j = 0; j < M; j++) {
            int count = 0;
            for (int i = 0; i < N; i++) {
                if (schedule[i][j] == 1) {
                    count++;
                }
            }
            if (count > 1) {
                res += (count * (count - 1)) / 2;
            }
        }

        System.out.println(res);
        sc.close();
    }
}
A collision happens when more than one movie is scheduled on the same day.
If day j has X movies, then the number of collisions for that day is combinations of any two movies:
collisions: x*(x-1)/2
We repeat this for all M days and sum up the total collisions.
A collision occurs when two movies are scheduled on the same day.
For example:
Day 1: Movies 4: (1,2), (1,3), (1,4),(2,3),(2,4),(3,4) → 6 collisions
Day 2: Movies 2: (1,3) → 1 collision
Day 3: Movies scheduled are 3: (1,2),(1,3),(2,3) 3 collisions
Thus, the total number of different movie screening collisions is 4.
