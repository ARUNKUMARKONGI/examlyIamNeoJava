import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String message1 = scanner.nextLine().trim();
        MessagePrinter messagePrinter1 = new MessagePrinter(message1);
        messagePrinter1.display();

        String message2 = scanner.nextLine().trim();
        String[] splitMessage = message2.split(" ");
        if (splitMessage.length == 2) {
            MessagePrinter messagePrinter2 = new TwoWordMessagePrinter(splitMessage[0], splitMessage[1]);
            messagePrinter2.display();
        } else {
            System.out.println("Invalid input");
        }

        scanner.close();
    }
}

class MessagePrinter {
    protected String message;

    public MessagePrinter(String message) {
        this.message = message;
    }

    public void display() {
        System.out.println("Overloaded: " + message);
    }
}
class TwoWordMessagePrinter extends MessagePrinter {
    private String message2;

    public TwoWordMessagePrinter(String message1, String message2) {
        super(message1);
        this.message2 = message2;
    }

    @Override
    public void display() {
        System.out.println("Overloaded: " + message + " & " + message2);
    }
}
------------------------------
import java.io.*;
import java.lang.Math.*;
import java.util.*;

abstract class Shape {
    abstract void rectangleArea(int l,int b);
    abstract void squareArea(int s);
    abstract void circleArea(int r);
}

class Area extends Shape {
    public void rectangleArea(int l,int b) {
        System.out.println(l*b);
    }
    public void squareArea(int s) {
        System.out.println(s*s);
    }
    public void circleArea(int r) {
        double res = Math.PI * r * r;
        System.out.printf("%.2f\n", res);
    }
}

class Main {
    public static void main(String [] args) {
        int length, breadth, radius, side;
        Scanner sc = new Scanner(System.in);
        length = sc.nextInt();
        breadth = sc.nextInt();
        side = sc.nextInt();
        radius = sc.nextInt();
        Area a = new Area();
        a.rectangleArea(length, breadth);
        a.squareArea(side);
        a.circleArea(radius);
        sc.close();
    }
}

----------------
import java.util.Scanner;

interface Total {
    void printCoins(int arr[], int n);
}

class Coin implements Total {
    public void printCoins(int arr[], int n) {
        int oddSum = 0, evenSum = 0;
        for (int i = 0; i < n; i++) {
            if (i % 2== 0) {
                evenSum += arr[i];
            } else {
                oddSum += arr[i];
            }
        }
        int start = (oddSum >= evenSum) ? 1 : 0;
        for (int i = start; i < n; i += 2) {
            System.out.print(arr[i] + " ");
        }
    }
}

class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n1 = in.nextInt();
        if (n1 % 2 != 0) {
            System.out.print("Enter valid number");
            return;
        }
        int arr1[] = new int[n1];
        for (int i = 0; i < n1; i++) {
            arr1[i] = in.nextInt();
        }
        in.close();
        Coin obj = new Coin();
        obj.printCoins(arr1, n1);
    }
}

------------------------
import java.util.Scanner;

class Employee {
    int empId;
    float salary;

    Employee(int empId, float salary) {
        this.empId = empId;
        this.salary = salary;
    }

    void display() {
        System.out.println(empId);
        System.out.println(salary);
    }
}

class EmpLevel extends Employee {
    EmpLevel(int empId, float salary) {
        super(empId, salary);
    }

    void displayLevel() {
        int level = (salary > 100) ? 1 : 2;
        display();
        System.out.println(level);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int empId = scanner.nextInt();
        float salary = scanner.nextFloat();
        EmpLevel emp = new EmpLevel(empId, salary);
        emp.displayLevel();
        scanner.close();
    }
}

------------------------------------------------------------------------
import java.util.Scanner;

class Box {
    double width;
    double height;
    double depth;
}

class Main {
    public static void main(String args[]) {
        Box mybox = new Box();
        double vol;
        
        Scanner sc = new Scanner(System.in);

        mybox.width = sc.nextDouble();
        mybox.height = sc.nextDouble();
        mybox.depth = sc.nextDouble();

        if (mybox.width > 0 && mybox.height > 0 && mybox.depth > 0) {
            vol = mybox.width * mybox.height * mybox.depth;
            System.out.printf("Volume: %.2f", vol);
        } 

        sc.close();
    }
}
----------------------------------------------------------------------------------
import java.util.Scanner;

class Student {
    int rollno, mark1, mark2, mark3, total;

    Student(int rollno, int mark1, int mark2, int mark3) {
        this.rollno = rollno;
        this.mark1 = mark1;
        this.mark2 = mark2;
        this.mark3 = mark3;
        this.total = mark1 + mark2 + mark3;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Student[] students = new Student[n];

        int highestMark1 = 0, highestMark2 = 0, highestMark3 = 0;
        int highestTotal = 0, topRollno1 = -1, topRollno2 = -1, topRollno3 = -1, topTotalRollno = -1;

        for (int i = 0; i < n; i++) {
            int rollno = sc.nextInt();
            int mark1 = sc.nextInt();
            int mark2 = sc.nextInt();
            int mark3 = sc.nextInt();

            students[i] = new Student(rollno, mark1, mark2, mark3);

            System.out.println(students[i].total);

            if (mark1 > highestMark1) {
                highestMark1 = mark1;
                topRollno1 = rollno;
            }
            if (mark2 > highestMark2) {
                highestMark2 = mark2;
                topRollno2 = rollno;
            }
            if (mark3 > highestMark3) {
                highestMark3 = mark3;
                topRollno3 = rollno;
            }
            if (students[i].total > highestTotal) {
                highestTotal = students[i].total;
                topTotalRollno = rollno;
            }
        }

        System.out.println(topRollno1 + " " + highestMark1);
        System.out.println(topRollno2 + " " + highestMark2);
        System.out.println(topRollno3 + " " + highestMark3);
        System.out.println(topTotalRollno + " " + highestTotal);

        sc.close();
    }
}
