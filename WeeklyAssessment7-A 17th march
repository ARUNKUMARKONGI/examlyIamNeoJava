import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class CharacterFrequency {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        sc.close();
        
        TreeMap<Character, Integer> freqMap = new TreeMap<>();
        
        for (char c : s.toCharArray()) {
            freqMap.put(c, freqMap.getOrDefault(c, 0) + 1);
        }
        
        for (Map.Entry<Character, Integer> entry : freqMap.entrySet()) {
            System.out.println("'" + entry.getKey() + "': " + entry.getValue());
        }
    }
}


-------------------------------------------------------------------------------
import java.util.ArrayList;
import java.util.Scanner;

public class ArrayListMain {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.nextLine();
        
        ArrayList<String> names = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            names.add(sc.nextLine());
        }
        
        for (String name : names) {
            System.out.println(name);
        }
    }
}
0R
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;
class ArrayListMain 
{
	public static void main(String args[]) 
	{
		List<String> names = new ArrayList<>();
		Scanner sc = new Scanner(System.in);
		int n =Integer.parseInt(sc.nextLine());
		for (int i=0;i<n;i++)
			names.add(sc.nextLine());
		Iterator it = names.iterator();
		while(it.hasNext()) 
		{
			System.out.println(it.next());
	    }

    }
}
--------------------------------------------
class ValueProcessor {
    public static Map<String, Double> readValues(Scanner scanner) {
        Map<String, Double> valueMap = new HashMap<>();
        while (true) {
            String input = scanner.nextLine();
            if (input.toLowerCase().equals("done")) {
                break;
            }
            String[] pair = input.split(":");
            if (pair.length == 2) {
                String key = pair[0].trim();
                try {
                    double value = Double.parseDouble(pair[1].trim());
                    valueMap.put(key, value);
                } catch (NumberFormatException e) {
                    System.out.println("Invalid input");
                    return null;
                }
            } else {
                System.out.println("Invalid format");
                return null;
            }
        }
        return valueMap;
    }

    public static double calculateSum(Map<String, Double> valueMap) {
        double sum = 0;
        for (double value : valueMap.values()) {
            sum += value;
        }
        return sum;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Map<String, Double> valueMap = ValueProcessor.readValues(scanner);
        if (valueMap != null) {
            double sum = ValueProcessor.calculateSum(valueMap);
            System.out.printf("%.2f\n", sum);
        }
        scanner.close();
    }
}
---------------------------------------------------------------------------------------
import java.util.*;

class NumberProcessor {
    private TreeSet<Integer> numberSet;

    public NumberProcessor(Set<Integer> numberSet) {
        this.numberSet = new TreeSet<>(numberSet); // Convert  Set to a TreeSet
    }

    public void addNumber(int number) {
        numberSet.add(number);
    }

    public int retrieveAndRemoveFirstElement() {
        return numberSet.pollFirst();
    }

    public Set<Integer> getNumberSet() {
        return numberSet;
    }
}
class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Set<Integer> numberSet = new TreeSet<>();
        NumberProcessor numberProcessor = new NumberProcessor(numberSet);

        int numberOfElements = scanner.nextInt();
        for (int i = 0; i < numberOfElements; i++) {
            numberProcessor.addNumber(scanner.nextInt());
        }

        int firstElement = numberProcessor.retrieveAndRemoveFirstElement();
        System.out.println(numberProcessor.getNumberSet());

        scanner.close();
    }
}
