Unique Elements:
-----------------------
Input
--------
5
7 3 4 7 3
Output
------------
7 3 4 

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        HashSet<Integer> set = new HashSet<>();
        
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        for (int i = 0; i < n; i++) {
            if (set.add(arr[i])) {
                System.out.print(arr[i] + " ");
            }
        }
        
        sc.close();
    }



---------------------------
Odd and even array separation
input=
5 
1 3 4 5 2

Odd integers: 1 3 5 
Even integers: 4 2 
-------------------------------
#include <stdio.h>

int main() {
    int n;
    scanf("%d", &n);

    int arr[n];

    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int odd_count = 0, even_count = 0;

    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 == 0) {
            even_count++;
        } else {
            odd_count++;
        }
    }

    int odd[odd_count], even[even_count];
    int odd_index = 0, even_index = 0;

    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 == 0) {
            even[even_index++] = arr[i];
        } else {
            odd[odd_index++] = arr[i];
        }
    }

    printf("Odd integers: ");
    for (int i = 0; i < odd_count; i++) {
        printf("%d ", odd[i]);
    }
    printf("\n");

    printf("Even integers: ");
    for (int i = 0; i < even_count; i++) {
        printf("%d ", even[i]);
    }

    return 0;
}

}

-------------------------------------
Given an array arr[] of integers and a number x, write a program to find the smallest subarray with a sum greater than the given value. 
Input:
arr[] = {1, 4, 45, 6, 0, 19}, x = 51
Output: 
3
Explanation:
The sum of the subarray {4, 45, 6} is 55, which is greater than the given value 51. So, return 3, the length of the subarray.
------------------------------------------------------

#include <stdio.h>


int smallestSubWithSum(int arr[], int n, int x)
{
    int min_len = n + 1; //assuming max value

    for (int start = 0; start < n; start++)
    {
        int curr_sum = arr[start];
        if (curr_sum > x)
            return 1;
        for (int end = start + 1; end < n; end++)
        {
            curr_sum += arr[end];

            if (curr_sum > x && (end - start + 1) < min_len)
                min_len = (end - start + 1); //+1 extra bcz array zero index based
        }
    }
    return min_len;
}

int main()
{
    int n;
    scanf("%d", &n);

    int arr[n];
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &arr[i]);
    }

    int x;
    scanf("%d", &x);

    int res = smallestSubWithSum(arr, n, x);
    (res == n + 1) ? printf("Not Possible") : printf("%d", res);

    return 0;
}
